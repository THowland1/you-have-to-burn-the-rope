{
  "mappings": "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",
  "sources": [
    "index.js"
  ],
  "sourcesContent": [
    "\n\nimport { axes } from './js/axes.js';\nimport { boss } from './js/boss.js';\nimport { c, canvas, FRAME_HEIGHT, FRAME_WIDTH } from './js/canvas.js';\nimport { chandelier } from './js/chandelier.js';\nimport {\n    COURSE_HEIGHT, COURSE_WIDTH, JUMP_SPEED, PLAYER_ATTACKINTERVAL, SHOW_GRIDLINES,\n    SHOW_PLATFORMS, WALKING_SPEED, SHOW_DEBUGMENU, DEBUG_DELAY\n} from './js/consts.js';\nimport { offset } from './js/coordinates.js';\nimport { debugMenu } from './js/debug-menu.js';\nimport { explosions } from './js/explosions.js';\nimport { flames } from './js/flames.js';\nimport { healthBar } from './js/healthbar.js';\nimport { lasers } from './js/lasers.js';\nimport { phaseManager, PHASES } from './js/phase-manager.js';\nimport { platforms } from './js/platforms.js';\nimport { player } from './js/player.js';\nimport { plumes } from './js/plumes.js';\nimport { rope } from './js/rope.js';\nimport { slides } from './js/slides.js';\nimport { timeManager } from './js/time-manager.js';\nimport { audioManager } from './js/audio-manager.js';\nimport { buttonManager } from './js/button-manager.js';\nimport { ASSET_URLS } from './js/urls.js';\n\nif ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n        navigator.serviceWorker\n            .register(ASSET_URLS['./serviceworker.js'])\n            .then((reg) => console.log('Success: ', reg.scope))\n            .catch((err) => console.log('Failure: ', err));\n    });\n}\n\ndocument.getElementById('show-info').addEventListener('click', () => {\n    document.getElementById('info').classList.remove('hidden');\n});\n\ndocument.getElementById('hide-info').addEventListener('click', () => {\n    document.getElementById('info').classList.add('hidden');\n});\n\ndocument.getElementById('canvas').addEventListener('click', () => {\n    phaseManager.startStartPhase();\n});\n\nclass BG {\n    constructor() {\n        this.img = new Image();\n        this.img.src = ASSET_URLS['../sprites/bg.png'];\n    }\n    draw() {\n        const sx = offset.x;\n        const sy = offset.y;\n        const sw = FRAME_WIDTH;\n        const sh = FRAME_HEIGHT;\n        const dx = 0;\n        const dy = 0;\n        const dw = FRAME_WIDTH;\n        const dh = FRAME_HEIGHT;\n        this.img && c.drawImage(this.img,\n            sx,\n            sy,\n            sw,\n            sh,\n            dx,\n            dy,\n            dw,\n            dh,\n        );\n    }\n}\n\nconst bg = new BG();\n\nfunction animate() {\n    const now = new Date().valueOf();\n    timeManager.msPerFrame = now - timeManager.now;\n    timeManager.now = now;\n\n    if (DEBUG_DELAY) {\n        setTimeout(() => {\n            requestAnimationFrame(animate);\n        }, DEBUG_DELAY);\n\n    } else {\n        requestAnimationFrame(animate);\n    }\n\n    c.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (phaseManager.phase === PHASES.clicktostart) {\n        c.fillStyle = 'white';\n\n        c.textAlign = 'center';\n        c.font = '500 14px Inter';\n\n        c.fillText('Click to start', FRAME_WIDTH / 2, (FRAME_HEIGHT / 2));\n        return;\n    }\n\n    if (audioManager.endCreditsMusic.currentTime < 2) {\n\n        bg.draw();\n        if (phaseManager.showBackDoor) {\n            phaseManager.drawBackDoor();\n        }\n\n        boss.update();\n        player.update();\n        rope.update();\n        chandelier.update();\n        explosions.update();\n        plumes.update();\n        axes.update();\n        lasers.update();\n        healthBar.update();\n\n        flames.forEach(flame => flame.draw());\n        canvas.style.opacity = (2 - audioManager.endCreditsMusic.currentTime) / 2;\n        buttonManager.setOpacity((2 - audioManager.endCreditsMusic.currentTime) / 2);\n    } else {\n        canvas.style.opacity = 1;\n        buttonManager.hide();\n    }\n\n    if (player.left >= 108 * 32) {\n        phaseManager.startBossFightPhase();\n    } else if (player.left >= 6 * 32) {\n        phaseManager.startTunnelPhase();\n    }\n\n    c.fillStyle = 'white';\n    slides.forEach(slide => slide.draw());\n\n    if (player.hasFlame && player.intersects(rope.flammableBitOfRope)) {\n        player.hasFlame = false;\n        phaseManager.startRopeBurningPhase();\n    }\n\n    if (SHOW_PLATFORMS) {\n        platforms.forEach(platform => platform.draw());\n    }\n    if (SHOW_DEBUGMENU) {\n        debugMenu.draw();\n    }\n\n    if (SHOW_GRIDLINES) {\n        c.fillStyle = 'white';\n\n        Array.from(Array(COURSE_WIDTH / (32 * 4))).forEach((_, x) => {\n            c.fillRect((x * (32 * 4)) - offset.x, 0, 1, FRAME_HEIGHT);\n            c.fillText(`${x * 4}`, (x * (32 * 4)) - offset.x, 10);\n        }\n        );\n\n        Array.from(Array(COURSE_HEIGHT / (32 * 5))).forEach((_, y) => {\n            c.fillRect(0, (y * (32 * 5)) - offset.y, FRAME_WIDTH, 1);\n            c.fillText(`${y * 5}`, 10, (y * (32 * 5)) - offset.y);\n        }\n        );\n    }\n\n    if (player.localRight > 400 && offset.x + FRAME_WIDTH < COURSE_WIDTH && player.velocity.x > 0) {\n        offset.x += player.velocity.x * timeManager.msPerFrame;\n    } else if (player.localLeft < 200 && offset.x > 0 && player.velocity.x < 0) {\n        offset.x += player.velocity.x * timeManager.msPerFrame;\n    }\n    if (player.localTop < 175 && offset.y > 0 && player.velocity.y < 0) {\n        offset.y += player.velocity.y * timeManager.msPerFrame;\n    } else if (player.localBottom > 200 && offset.y + FRAME_HEIGHT < COURSE_HEIGHT && player.velocity.y > 0) {\n        offset.y += player.velocity.y * timeManager.msPerFrame;\n    }\n\n}\nanimate();\n"
  ],
  "names": [
    "$273U8",
    "parcelRequire",
    "navigator",
    "window",
    "addEventListener",
    "serviceWorker",
    "register",
    "$1AZ66",
    "ASSET_URLS",
    "then",
    "reg",
    "console",
    "log",
    "scope",
    "catch",
    "err",
    "document",
    "getElementById",
    "classList",
    "remove",
    "add",
    "$9Br2W",
    "phaseManager",
    "startStartPhase",
    "$dad545c909cfec2d$var$bg",
    "constructor",
    "this",
    "img",
    "Image",
    "src",
    "draw",
    "sx",
    "$jO1pA",
    "offset",
    "x",
    "sy",
    "y",
    "sw",
    "$bDwjg",
    "FRAME_WIDTH",
    "sh",
    "FRAME_HEIGHT",
    "dw",
    "dh",
    "c",
    "drawImage",
    "$dad545c909cfec2d$var$animate",
    "now",
    "Date",
    "valueOf",
    "$7UxbC",
    "timeManager",
    "msPerFrame",
    "$4WkZq",
    "DEBUG_DELAY",
    "setTimeout",
    "requestAnimationFrame",
    "clearRect",
    "canvas",
    "width",
    "height",
    "phase",
    "PHASES",
    "clicktostart",
    "fillStyle",
    "textAlign",
    "font",
    "fillText",
    "$gTlO9",
    "audioManager",
    "endCreditsMusic",
    "currentTime",
    "showBackDoor",
    "drawBackDoor",
    "$90X6C",
    "boss",
    "update",
    "$cyBds",
    "player",
    "$dkt7o",
    "rope",
    "$gq84b",
    "chandelier",
    "$5s1un",
    "explosions",
    "$6ICCA",
    "plumes",
    "axes",
    "$1Tzi6",
    "lasers",
    "$fgF6w",
    "healthBar",
    "$jnElw",
    "flames",
    "forEach",
    "flame",
    "style",
    "opacity",
    "$c0CTk",
    "buttonManager",
    "setOpacity",
    "hide",
    "left",
    "startBossFightPhase",
    "startTunnelPhase",
    "$2V6IC",
    "slides",
    "slide",
    "hasFlame",
    "intersects",
    "flammableBitOfRope",
    "startRopeBurningPhase",
    "SHOW_PLATFORMS",
    "$6n3Jv",
    "platforms",
    "platform",
    "SHOW_DEBUGMENU",
    "$7fZ6g",
    "debugMenu",
    "SHOW_GRIDLINES",
    "Array",
    "from",
    "COURSE_WIDTH",
    "_",
    "fillRect",
    "COURSE_HEIGHT",
    "localRight",
    "velocity",
    "localLeft",
    "localTop",
    "localBottom"
  ],
  "version": 3,
  "file": "index.4b4b8eaa.js.map"
}
